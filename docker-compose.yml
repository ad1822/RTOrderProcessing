services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  order-db:
    image: postgres:14
    container_name: order-database
    environment:
      POSTGRES_USER: orderuser
      POSTGRES_PASSWORD: orderpass
      POSTGRES_DB: orders
    ports:
      - '5432:5432'
    volumes:
      - order_db_data:/var/lib/postgresql/data

  order-service:
    build: ./1-order-service/
    container_name: order
    environment:
      DB_HOST: order-db
      DB_USER: orderuser
      DB_PASS: orderpass
      DB_NAME: orders
      DB_PORT: 5432
      PORT: 3000
    ports:
      - '3000:3000'
    depends_on:
      - order-db
      - kafka

  inventory-db:
    image: postgres:14
    container_name: inventory-database
    environment:
      POSTGRES_USER: inventoryuser
      POSTGRES_PASSWORD: inventorypass
      POSTGRES_DB: inventories
    ports:
      - '5433:5432'
    volumes:
      - inventory_db_data:/var/lib/postgresql/data
      - ./2-inventory-service/init-inventory.sql:/docker-entrypoint-initdb.d/init.sql:ro

  inventory-service:
    build: ./2-inventory-service/
    container_name: inventory
    ports:
      - '3001:3001'
    environment:
      DB_HOST: inventory-db
      DB_USER: inventoryuser
      DB_PASS: inventorypass
      DB_NAME: inventories
      DB_PORT: 5432
      PORT: 3001
    depends_on:
      - kafka
      - order-db
      - order-service
      - inventory-db

  payment-db:
    image: postgres:14
    container_name: payment-database
    environment:
      POSTGRES_USER: paymentuser
      POSTGRES_PASSWORD: paymentpass
      POSTGRES_DB: payments
    ports:
      - '5434:5432'
    volumes:
      - payment_db_data:/var/lib/postgresql/data
      - ./3-payment-service/init-payment.sql:/docker-entrypoint-initdb.d/init.sql:ro

  payment-service:
    build: ./3-payment-service/
    container_name: payment
    ports:
      - '3002:3002'
    environment:
      DB_HOST: payment-db
      DB_USER: paymentuser
      DB_PASS: paymentpass
      DB_NAME: payments
      DB_PORT: 5432
      PORT: 3002
    depends_on:
      - kafka
      - order-db
      - inventory-db
      - order-service
      - inventory-service

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - '8080:8080'
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    ports:
      - '9999:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # environment:
    # DOZZLE_FILTER: 'order,inventory,payment'

volumes:
  order_db_data:
  inventory_db_data:
  payment_db_data:
